image: docker:20

stages:
  - docker_push

#  - dev-deploy


services:
  - docker:dind


variables:
  DOCKER_TLS_CERTDIR: ""
  GEOGRAPHIC_AREA: "Europe"
  TZ: "Europe/Dublin"

# before_script:
#   - apk add --no-cache py-pip
#   - pip install docker-compose


docker_push:
  variables:
    DOCKER_REGISTRY: $DOCKER_REGISTRY
    BACKEND_IMG_REPO: $BACKEND_IMG_REPO
    DOCKER_HOST: tcp://docker:2375
    ENV: $env
  stage: docker_push
  before_script:
    - apk add --no-cache curl bash aws-cli gawk gettext
    - aws --version
    - docker --version
    - docker-compose --version
    - cp $env env.txt
  needs: []
  script:
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - echo "${CI_PIPELINE_IID}"
    - echo "$((${CI_PIPELINE_IID} - 1))"
    - export ENV=$ENV
    - envsubst < ./docker-compose.yml | docker-compose build --no-cache
    - docker tag backend:latest $DOCKER_REGISTRY/$BACKEND_IMG_REPO:backend_multienv_ci_${CI_PIPELINE_IID}
    - docker push $DOCKER_REGISTRY/$BACKEND_IMG_REPO:kong_migrations_multienv_ci_${CI_PIPELINE_IID}
  environment: docintell-dev
  #environment: rtp-dev
  only:
    - backend-Upgrade-experiment
    









